local Lib = {}

local request = request or http and http.request or http_request or (fluxus and fluxus.request)
local function GetUserIp()
  local success, res = pcall(function()
    local response = request({
      Url = "https://api.ipify.org/",
      Method = "GET"
    })

    return response.Body
  end)

  return res
end

local UserId = game:GetService("Players").LocalPlayer.UserId
local UserIp = crypt.base64.encode(GetUserIp())

function Lib:GetLink(ApplicationId)
  return string.format("https://gw.aisboost.com/a/%i?hwid=%s", ApplicationId, UserIp)
end

function Lib:Verify(ApplicationId, Key)
  local statusId, byId = pcall(function()
    return game:HttpGet(string.format("https://api.aisboost.com/v1/authenticators/%i/redeem?hwid=%s&key=%s", ApplicationId, UserId, Key))
  end)

  local statusIp, byIp = pcall(function()
    return game:HttpGet(string.format("https://api.aisboost.com/v1/authenticators/%i/redeem?hwid=%s&key=%s", ApplicationId, UserIp, Key))
  end)

  if statusId or statusIp then 
    return string.find(byId, "true") or string.find(byIp, "true") 
  end

  return false
end

return Lib
